.TH RND_STACK_SET 3 DATE "librnd-VERSION"
.SH NAME
rnd_stack_set - set the value of an arbitrary element in a stack
.SH SYNOPSIS
.ad l
#include <rnd.h>
.sp
int
.BR rnd_stack_set "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
void
.RI * val )
.br
int
.BR rnd_stack_setc "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
char
.IR val )
.br
int
.BR rnd_stack_sets "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
short
.IR val )
.br
int
.BR rnd_stack_seti "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
int
.IR val )
.br
int
.BR rnd_stack_setl "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
long
.IR val )
.br
int
.BR rnd_stack_setsc "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
signed char
.IR val )
.br
int
.BR rnd_stack_setuc "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
unsigned char
.IR val )
.br
int
.BR rnd_stack_setus "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
unsigned short
.IR val )
.br
int
.BR rnd_stack_setui "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
unsigned int
.IR val )
.br
int
.BR rnd_stack_setul "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
unsigned long
.IR val )
.br
int
.BR rnd_stack_setf "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
float
.IR val )
.br
int
.BR rnd_stack_setd "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
double
.IR val )
.br
int
.BR rnd_stack_setld "(const struct rnd_stack"
.RI * stack ,
size_t
.IR idx ,
long double
.IR val )
.sp
Link with \fI-lrnd\fP.
.ad
.SH DESCRIPTION
.P
The functions in the
.BR rnd_stack_set ()
family are used to set the value of an arbitrary element in a stack. The
previous value is overwritten and non-recoverable.
.P
.I stack
is the stack.
.P
.I idx
is the index of the element that shall be overwritten.
.P
.I val
is the new value for the element at position
.IR idx .
.SS Generic Form
.I val
must be a void pointer to the first byte of the new value. The source and
destination blocks must not overlap in memory. The number of bytes to copy is
equal to
.IR stack "'s " elem_size
field.
.SS Suffixed Form
.I val
is passed directly in the function argument.
.SH RETURN VALUE
.P
If successful, the functions in the
.BR rnd_stack_set ()
family shall return 0. Otherwise, they shall return a code indicating the
error.
.SH ERRORS
The functions in the
.BR rnd_stack_set ()
family shall fail if:
.IP \fBRND_EINVAL\fP 1.5i
.I stack
is a null pointer (debug mode only).
.IP \fBRND_EINDEX\fP 1.5i
.I idx
out of range (debug mode only).
.SS Generic Form
.IP \fBRND_EINVAL\fP 1.5i
.I val
is a null pointer (debug mode only).
.SS Suffixed Form
.IP \fBRND_EILLEGAL\fP 1.5i
.IR stack "'s " elem_size
does not match the size of the
.I val
argument (debug mode only).
.SH CONFORMING TO
See
.BR librnd (7).
.SH SEE ALSO
.ad l
.BR librnd (7),
.BR rnd_stack (7),
.BR rnd_stack_create (3),
.BR rnd_stack_destroy (3),
.BR rnd_stack_clear (3),
.BR rnd_stack_copy (3),
.BR rnd_stack_map (3),
.BR rnd_stack_push (3),
.BR rnd_stack_insert (3),
.BR rnd_stack_quickinsert (3),
.BR rnd_stack_peek (3),
.BR rnd_stack_pop (3),
.BR rnd_stack_remove (3),
.BR rnd_stack_quickremove (3),
.BR rnd_stack_get (3),
.BR rnd_stack_print (3)

