.TH RND_QUEUE_CREATE 3 DATE "librnd-VERSION"
.SH NAME
rnd_queue_create \- initialize a queue
.SH SYNOPSIS
.ad l
#include <rnd.h>
.sp
struct rnd_queue *
.BR rnd_queue_create (size_t
.IR elem_size ,
size_t
.IR capacity )
.sp
Link with \fI-lrnd\fP.
.ad
.SH DESCRIPTION
The
.BR rnd_queue_create ()
function allocates and initializes a new queue, returning its address.
.P
.I elem_size
denotes the size of a single element. This allows the user to store any kind of
data, by setting
.I elem_size
to
.BR sizeof ( data ).
.I elem_size
cannot be changed during the lifespan of a queue.
.P
.I capacity
denotes the initial number of elements that can be stored on the queue without
allocating more memory.
.I capacity
shall be dynamically increased whenever more space is needed.
.SH RETURN VALUE
If successful, the
.BR rnd_queue_create ()
function shall return a valid pointer to the created queue. Otherwise, it shall
return
.BR NULL .
.SH ERRORS
The
.BR rnd_queue_create ()
function shall fail if:
.IP (1) 1.5i
The buffer size
.RI ( elem_size "\ *\ " capacity )
exceeds
.IR SIZE_MAX .
.IP (2) 1.5i
Memory allocation failed.
.IP (3) 1.5i
Either
.I elem_size
or
.I capacity
is 0 (debug mode only).
.SH CONFORMING TO
See
.BR librnd (7).
.SH SEE ALSO
.ad l
.BR librnd (7),
.BR rnd_queue (7),
.BR rnd_queue_destroy (3),
.BR rnd_queue_clear (3),
.BR rnd_queue_copy (3),
.BR rnd_queue_map (3),
.BR rnd_queue_push (3),
.BR rnd_queue_insert (3),
.BR rnd_queue_quickinsert (3),
.BR rnd_queue_peek (3),
.BR rnd_queue_pop (3),
.BR rnd_queue_remove (3),
.BR rnd_queue_quickremove (3),
.BR rnd_queue_get (3),
.BR rnd_queue_set (3),
.BR rnd_queue_print (3)
