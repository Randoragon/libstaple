.TH RND_QUEUE_PEEK 3 DATE "librnd-VERSION"
.SH NAME
rnd_queue_peek - look up the front element of a queue
.SH SYNOPSIS
.ad l
#include <rnd.h>
.sp
int
.BR rnd_queue_peek "(const struct rnd_queue"
.RI * queue ,
void
.RI * output )
.br
char
.BR rnd_queue_peekc "(const struct rnd_queue"
.RI * queue )
.br
short
.BR rnd_queue_peeks "(const struct rnd_queue"
.RI * queue )
.br
int
.BR rnd_queue_peeki "(const struct rnd_queue"
.RI * queue )
.br
long
.BR rnd_queue_peekl "(const struct rnd_queue"
.RI * queue )
.br
signed char
.BR rnd_queue_peeksc "(const struct rnd_queue"
.RI * queue )
.br
unsigned char
.BR rnd_queue_peekuc "(const struct rnd_queue"
.RI * queue )
.br
unsigned short
.BR rnd_queue_peekus "(const struct rnd_queue"
.RI * queue )
.br
unsigned int
.BR rnd_queue_peekui "(const struct rnd_queue"
.RI * queue )
.br
unsigned long
.BR rnd_queue_peekul "(const struct rnd_queue"
.RI * queue )
.br
float
.BR rnd_queue_peekf "(const struct rnd_queue"
.RI * queue )
.br
double
.BR rnd_queue_peekd "(const struct rnd_queue"
.RI * queue )
.br
long double
.BR rnd_queue_peekld "(const struct rnd_queue"
.RI * queue )
.sp
Link with \fI-lrnd\fP.
.ad
.SH DESCRIPTION
The functions in the
.BR rnd_queue_peek ()
family are used to peek at the element at the front of the queue. The
looked up element remains on the queue. Attempting to peek at an empty queue
yields undefined behavior.
.P
.I queue
is the queue.
.SS Generic Form
.P
.I output
is the start of an adequately-sized block of memory the peeked element shall
be copied into.
.I output
must not overlap in memory with the peeked element.
.SH RETURN VALUE
.SS Generic Form
If successful, the
.BR rnd_queue_peek ()
function shall return 0. Otherwise, it shall return a code indicating the
error.
.SS Suffixed Form
If successful, the suffixed
.BR rnd_queue_peek ()
functions shall return the value of the peeked element. Otherwise, they shall
return 0.
.SH ERRORS
.SS Generic Form
The
.BR rnd_queue_peek ()
function shall fail if:
.IP \fBRND_EINVAL\fP 1.5i
Either
.IR queue " or " output
are null pointers (debug mode only).
.IP \fBRND_EILLEGAL\fP 1.5i
.I queue
is empty (debug mode only).
.SS Suffixed Form
The suffixed
.BR rnd_queue_peek ()
functions shall fail if:
.IP 0 1.5i
.I queue
is a null pointer (debug mode only).
.IP 0 1.5i
.I queue
is empty (debug mode only).
.IP 0 1.5i
.IR queue "'s " elem_size
does not match the size of the function's return type (debug mode only).
.P
Note that 0 can also be a successful return value, since it is a number that can
be stored on the queue, like any other.
.SH CONFORMING TO
See
.BR librnd (7).
.SH NOTES
For practical reasons, functions of the suffixed form do not provide an
unambiguous error-detecting interface. This design choice was made because these
functions can only fail if the user misuses the library.
.P
This means there is a guaranteed uncertainty whenever a suffixed function
returns 0. However, failures can be told apart from successes depending on the
presence or absence of an error message (quiet mode needs to be disabled).
.SH SEE ALSO
.ad l
.BR librnd (7),
.BR rnd_queue (7),
.BR rnd_queue_create (3),
.BR rnd_queue_destroy (3),
.BR rnd_queue_clear (3),
.BR rnd_queue_copy (3),
.BR rnd_queue_map (3),
.BR rnd_queue_push (3),
.BR rnd_queue_insert (3),
.BR rnd_queue_quickinsert (3),
.BR rnd_queue_pop (3),
.BR rnd_queue_remove (3),
.BR rnd_queue_quickremove (3),
.BR rnd_queue_get (3),
.BR rnd_queue_set (3),
.BR rnd_queue_print (3)

