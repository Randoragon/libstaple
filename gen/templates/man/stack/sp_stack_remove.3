.\"M stack
.TH SP_STACK_REMOVE 3 DATE "libstaple-VERSION"
.\"NAME str
\- remove an element from any position of a stack
.\". MAN_SYNOPSIS_BEGIN
int
.BR sp_stack_remove "(struct sp_stack"
.RI * stack ,
size_t
.IR idx ,
int
.RI (* dtor )(void*))
.\"SS{
.br
$TYPE$
.BR sp_stack_remove$SUFFIX$ "(struct sp_stack"
.RI * stack ,
size_t
.IR idx )
.\"SS}
.br
char
.RB * sp_stack_removestr "(struct sp_stack"
.RI * stack ,
size_t
.IR idx )
.\". MAN_SYNOPSIS_END
.SH DESCRIPTION
The functions in the
.BR sp_stack_remove ()
family are used to remove elements from any position of a stack. The order of
remaining elements shall be preserved.
.P
.I stack
is the stack that shall be removed from.
.P
.I idx
is the index of the element that shall be removed. Indices start from 0 and
extend downwards \(em 0 is the top element, 1 is the element below it, and so
on.
.br
Removing position
.BR n " requires " n
elements to be moved in memory. Removing the 0th element has the same effect as
.BR sp_stack_pop (3).
.br
.I idx
must be smaller than
.IR stack->size .
.SS Generic Form
.I dtor
is a pointer to a destructor function that shall be invoked on the removed
element. This mechanism is useful if individual stack elements own memory
that should be freed (see EXAMPLES). If no such destructor function is needed,
.B NULL
can be passed to skip this functionality.
.SH RETURN VALUE
.SS Generic Form
.\". MAN_RETVAL_0_OR_CODE sp_stack_remove
.SS Suffixed Form
.\". MAN_RETVAL_ELEM_VALUE_SUFFIXED sp_stack_remove removed
.\". MAN_RETVAL_MANUALLY_FREE sp_stack_removestr removed string
.SH ERRORS
.SS Generic Form
.\". MAN_SHALL_FAIL_IF sp_stack_remove
.\". MAN_ERRCODE SP_EINVAL
.I stack
is a null pointer (debug mode only).
.\". MAN_ERRCODE SP_EINDEX
.I idx
out of range (debug mode only).
.\". MAN_ERRCODE SP_ECALLBK
.I dtor
returned non-0.
.SS Suffixed Form
.\". MAN_SHALL_FAIL_IF_SUFFIXED sp_stack_remove
.\". MAN_ERRCODE 0
.I stack
is a null pointer (debug mode only).
.\". MAN_ERRCODE 0
.I idx
out of range (debug mode only).
.\". MAN_ERRCODE 0
.IR stack->elem_size
does not match the size of the function's return type (debug mode only).
.P
(the
.BR sp_stack_removestr ()
function returns
.B NULL
instead of 0)
.SH NOTES
.\". MAN_NOTE_DEBUG_AMBIGUOUS_ERROR sp_stack_removestr
.P
.\". MAN_NOTE_GENERIC_REMOVE_ELEM stack
.\". MAN_CONFORMING_TO
.SH EXAMPLES
.\". MAN_EXAMPLE_REMOVE_DTOR stack s
