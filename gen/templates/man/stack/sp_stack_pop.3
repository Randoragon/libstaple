.\"M stack
.TH SP_STACK_POP 3 DATE "libstaple-VERSION"
.\"NAME str
\- remove and retrieve the top element of a stack
.\". MAN_SYNOPSIS_BEGIN
int
.BR sp_stack_pop "(struct sp_stack"
.RI * stack ,
int
.RI (* dtor )(void*))
.\"SS{
.br
$TYPE$
.BR sp_stack_pop$SUFFIX$ "(struct sp_stack"
.RI * stack )
.\"SS}
.br
char
.RB * sp_stack_popstr "(struct sp_stack"
.RI * stack )
.\". MAN_SYNOPSIS_END
.SH DESCRIPTION
The functions in the
.BR sp_stack_pop ()
family are used to remove the top element of a stack.
.br
Attempting to pop an element from an empty stack yields undefined behavior,
except in debug mode (see
.BR ERRORS ).
.P
.I stack
is the stack.
.SS Generic Form
.I dtor
is a pointer to a destructor function that shall be invoked on the removed
element. This mechanism is useful if individual stack elements own memory
that should be freed (see EXAMPLES). If no such destructor function is needed,
.B NULL
can be passed to skip this functionality.
.SH RETURN VALUE
.SS Generic Form
.\". MAN_RETVAL_0_OR_CODE sp_stack_pop
.SS Suffixed Form
.\". MAN_RETVAL_ELEM_VALUE_SUFFIXED sp_stack_pop popped
.\". MAN_RETVAL_MANUALLY_FREE sp_stack_popstr popped string
.SH ERRORS
.SS Generic Form
.\". MAN_SHALL_FAIL_IF sp_stack_pop
.\". MAN_ERRCODE SP_EINVAL
.I stack
is a null pointer (debug mode only).
.\". MAN_ERRCODE SP_EILLEGAL
.I stack
is empty (debug mode only).
.\". MAN_ERRCODE SP_ECALLBK
.I dtor
returned non-0.
.SS Suffixed Form
.\". MAN_SHALL_FAIL_IF_SUFFIXED sp_stack_pop
.\". MAN_ERRCODE 0
.I stack
is a null pointer (debug mode only).
.\". MAN_ERRCODE 0
.I stack
is empty (debug mode only).
.\". MAN_ERRCODE 0
.IR stack->elem_size
does not match the size of the function's return type (debug mode only).
.P
(the
.BR sp_stack_popstr ()
function returns
.B NULL
instead of 0)
.SH NOTES
.\". MAN_NOTE_DEBUG_AMBIGUOUS_ERROR sp_stack_popstr
.P
.\". MAN_NOTE_GENERIC_POP_ELEM stack
.\". MAN_CONFORMING_TO
.SH EXAMPLES
.\". MAN_EXAMPLE_POP_DTOR stack s
