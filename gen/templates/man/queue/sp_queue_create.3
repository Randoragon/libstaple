.\"M queue
.TH SP_QUEUE_CREATE 3 DATE "libstaple-VERSION"
.SH NAME
sp_queue_create \- initialize a queue
.\". MAN_SYNOPSIS_BEGIN
struct sp_queue
.RB * sp_queue_create (size_t
.IR elem_size ,
size_t
.IR capacity )
.\". MAN_SYNOPSIS_END
.SH DESCRIPTION
The
.BR sp_queue_create ()
function allocates and initializes a new queue, returning its address.
.P
.I elem_size
denotes the size of a single element. This allows the user to store any kind of
data, by setting
.I elem_size
to
.BR sizeof ( data ).
.I elem_size
cannot be changed during the lifespan of a queue.
.P
.I capacity
denotes the initial number of elements that can be stored on the queue without
allocating more memory.
.I capacity
shall be dynamically increased whenever more space is needed.
.SH RETURN VALUE
.\". MAN_RETVAL_POINTER_OR_NULL sp_queue_create queue
.SH ERRORS
.\". MAN_SHALL_FAIL_IF sp_queue_create
.\". MAN_ERRCODE NULL
The buffer size
.RI ( elem_size "\ *\ " capacity )
exceeds
.IR SIZE_MAX .
.\". MAN_ERRCODE NULL
Memory allocation failed.
.\". MAN_ERRCODE NULL
Either
.I elem_size
or
.I capacity
is 0 (debug mode only).
.\". MAN_CONFORMING_TO
.SH SEE ALSO
.ad l
.BR libstaple (7),
.BR sp_queue (7),
.BR sp_queue_destroy (3),
.BR sp_queue_clear (3),
.BR sp_queue_copy (3),
.BR sp_queue_map (3),
.BR sp_queue_push (3),
.BR sp_queue_insert (3),
.BR sp_queue_qinsert (3),
.BR sp_queue_peek (3),
.BR sp_queue_pop (3),
.BR sp_queue_remove (3),
.BR sp_queue_qremove (3),
.BR sp_queue_get (3),
.BR sp_queue_set (3),
.BR sp_queue_print (3)
